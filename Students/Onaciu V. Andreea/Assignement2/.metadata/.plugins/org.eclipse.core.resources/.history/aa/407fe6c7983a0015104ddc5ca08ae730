 
public class Functions {
	
 public int[] add(int[] a,int[] b,int n,int m){
	 int s[]=new int[((n>m)?n:m)];
	 int length=((n>m)?n:m)-1;
	 int lengthA=n-1;
	 int lengthB=m-1; 
	 while (lengthA>=0 && lengthB>=0){
		 s[length]=a[lengthA]+b[lengthB];
		 length--;
		 lengthA--;
		 lengthB--;
	 }
		 for(int i=0;i<=length;i++){
			 s[i]=((n>m)?a[i]:b[i]);
		 }
		 return s;
 }

 public int[] substract(int[] a,int[] b,int n,int m){
	 
	 System.out.println("The result of the substraction of this 2 polynomials is: ");
	 int s[]=new int[((n>m)?n:m)];
	 int length=((n>m)?n:m)-1;
	 int lengthA=n-1;
	 int lengthB=m-1; 
	 while (lengthA>=0 && lengthB>=0){
		 s[length]=a[lengthA]-b[lengthB];
		 length--;
		 lengthA--;
		 lengthB--;
	 }
		 for(int i=0;i<=length;i++){
			 s[i]=((n>m)?a[i]:-b[i]); 
		 }
		 return s;
 }

 public int[] multiply(int[] a,int[] b,int n,int m){
	int multiply[]=new int[n+m-1];
	int lengthA=n-1;
	int lengthB=m-1;
	int length=n+m-2;
	for (int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			multiply[length-lengthA+i-lengthB+j]+=a[i]*b[j];
	return multiply;
 }

 public int[] eval(int[] a,int[] b,int n,int m,int scalar){
     int[] result=new int[2]; 	 
	 for (int i=n-1;i>=0;i--)
      		 result[0]+= Math.pow(scalar,n-1-i)*a[i];
	 //System.out.println("The result of the evaluation of the first polynomial with the scalar "+scalar+" is "+result+".");
	
	 for (int i=m-1;i>=0;i--)
  		 result[1]+= Math.pow(scalar,m-1-i)*b[i];
	 //System.out.println("The result of the evaluation of the second polynomial with the scalar "+scalar+" is "+result+".");
	 return result;
 }

 public int[] mul_scal(int[] a,int[] b,int n,int m,int scalar){
	 
	 //System.out.println("The resulting polynomials after multypling with the scalar "+scalar+"are: ");
	 
	 for (int i=0;i<n;i++){
		 a[i]*=scalar;
		 //if (a[i]!=0 && (n-i-1)!=0) System.out.print(a[i]+"x^"+(n-i-1)+"+");
		 //if (n-i-1==0) System.out.print(a[i]); 
	 }
	 System.out.println("");
	 for (int i=0;i<m;i++){
		 b[i]*=scalar;
		 //if (a[i]!=0 && i!=0) System.out.print(a[i]+"x^"+i);
		 //if (0==i) System.out.print(a[i]); 
	 }
	 return a;
 }
 
}
